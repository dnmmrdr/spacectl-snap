name: Build Snap

on:
  schedule:
    - cron: '0 */12 * * *'

  workflow_dispatch:

jobs:
  detect-version:
    runs-on: ubuntu-latest

    outputs:
      latest_tag: ${{ steps.get-latest-release.outputs.latest_tag }}
      run_build: ${{ steps.check.outputs.run_build }}

    steps:
      - name: Get latest tag from another repo
        id: get-latest-release
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/spacelift-io/spacectl/tags \
            | jq -r '.[0].name' | sed s/v//g | tr -d '\n')
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Restore last built release (cache)
        id: cache-last-release
        uses: actions/cache@v4
        with:
          path: .last_release
          key: last-release-${{ steps.get-latest-release.outputs.latest_tag }}

      - name: Compare with cached release
        id: check
        run: |
          LATEST_TAG="${{ steps.get-latest-release.outputs.latest_tag }}"
          if [ -f .last_release ]; then
            LAST_TAG=$(cat .last_release)
          else
            LAST_TAG=""
            echo "" > .last_release 
          fi

          echo "Latest upstream tag: $LATEST_TAG"
          echo "Last built tag: $LAST_TAG"

          if [ "$LATEST_TAG" = "$LAST_TAG" ]; then
            echo "No new release found. Exiting."
            echo "run_build=false" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "run_build=true" >> $GITHUB_OUTPUT
          fi

          # Save the new tag so it gets cached at the end of the job
          echo $LATEST_TAG > .last_release

  build-snap:
    runs-on: ubuntu-latest
    needs: detect-version

    strategy:
      matrix:
        arch: [amd64, arm64]
    
    steps:
      - name: Checkout current code
        uses: actions/checkout@v5

      - name: Update Snap version dynamically
        run: |
          sed -i "s/^version: .*/version: ${{ needs.detect-version.outputs.latest_tag }}/" snap/snapcraft.yaml
          cat snap/snapcraft.yaml

      - name: Build Snap
        uses: snapcore/action-build@v1
        id: build-snap
        with:
          snapcraft-args: "--build-for=${{ matrix.arch }}"

      - name: Publish Snap
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAP_STORE_LOGIN }}
        with:
          snap: ./*.snap
          release: edge
